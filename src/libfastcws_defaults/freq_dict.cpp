// SPDX-License-Identifier: BSD-2-Clause

#include "fastcws_defaults/compressor.hpp"
#include "fastcws_defaults/freq_dict.hpp"
#include "fastcws_defaults/imemstream.hpp"

#include <vector>

#include "freq_dict_gen.hpp"

namespace fastcws {

namespace defaults {

// generated by src/tools/snapshot_utils.cpp
extern const uint8_t *const compressed_freq_dict_data_begin;
extern const size_t compressed_freq_dict_data_size;
extern const size_t decompressed_freq_dict_data_size;

freq_dict_region_t freq_dict_region;
freq_dict_t* freq_dict;

void init_freq_dict() noexcept {
	std::vector<char> decompress_buffer;
	decompress_buffer.resize(decompressed_freq_dict_data_size);

	size_t deflate_size = compressor::decompress(
			reinterpret_cast<const char*>(compressed_freq_dict_data_begin), compressed_freq_dict_data_size,
			decompress_buffer.data(), decompress_buffer.size());

	imemstream is{decompress_buffer.data(), deflate_size};
	freq_dict_region = freq_dict_region_t::recover(is);
	auto dict_ptr = freq_dict_region.retrieve_ptr<freq_dict_t>(dict_ptr_tag);
	freq_dict = &(*dict_ptr);
}

};

};






