// SPDX-License-Identifier: BSD-2-Clause

#include "fastcws_defaults/compressor.hpp"
#include "fastcws_defaults/hmm_model.hpp"
#include "fastcws_defaults/imemstream.hpp"

#include <vector>

#include "hmm_model_gen.hpp"

namespace fastcws {

namespace defaults {

// generated by src/tools/snapshot_utils.cpp
extern const uint8_t *const compressed_hmm_model_data_begin;
extern const size_t compressed_hmm_model_data_size;
extern const size_t decompressed_hmm_model_data_size;

hmm_model_region_t hmm_model_region;
hmm_model_t* hmm_model;

void init_hmm_model() noexcept {
	std::vector<char> decompress_buffer;
	decompress_buffer.resize(decompressed_hmm_model_data_size);

	size_t deflate_size = compressor::decompress(
			reinterpret_cast<const char*>(compressed_hmm_model_data_begin), compressed_hmm_model_data_size,
			decompress_buffer.data(), decompress_buffer.size());

	imemstream is{decompress_buffer.data(), deflate_size};
	hmm_model_region = hmm_model_region_t::recover(is);
	auto model_ptr = hmm_model_region.retrieve_ptr<hmm_model_t>(model_ptr_tag);
	hmm_model = &(*model_ptr);
}

};

};






